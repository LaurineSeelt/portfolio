[["index.html", "Portfolio Laurine Seelt 1 Introduction", " Portfolio Laurine Seelt Laurine Seelt 2022-05-13 1 Introduction This is the introduction to the portfolio of Laurine Seelt. She worked really hard on this. Please be kind to them. "],["investigating-a-c.-elegans-plate-experiment.html", "2 Investigating a C. Elegans plate experiment", " 2 Investigating a C. Elegans plate experiment This was the first assignment for our portfolio. We had to look at the data of a C. Elegans plate experiment, plot some of the data and normalise the data for the negative control to get a clearer graph. First I took a look at the data and read it in RStudio. # View(here(&quot;Data/Data_raw/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) Tidydata &lt;- read_excel(here(&quot;Data/Data_raw/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) Tidydata &lt;- as.data.frame(Tidydata) Next, I looked at the columns RawData, compName and compConcentration to see what type they were. typeof(Tidydata$RawData) ## [1] &quot;double&quot; typeof(Tidydata$compName) ## [1] &quot;character&quot; typeof(Tidydata$compConcentration) ## [1] &quot;character&quot; RawData is double, dat is te begrijpen, het zijn getallen. CompName is een character, dat is ook te begrijpen. In die kolom staan de namen van de stofjes die zijn gebruikt. CompConcentration is een character, wat wel apart is. In die kolom staan de concentraties van de gebruikte stofjes, dus je zou verwachten dat dit een numerieke kolom zou zijn. Then I plotted the data in a scatter plot. Tidydata %&gt;% ggplot(aes(x = compConcentration, y = RawData, colour = compName, shape = expType))+ geom_point() De X-as is niet heel mooi of leesbaar. Volgens mij worden de getallen geordend op basis van met welk getal ze beginnen, niet de daadwerkelijke grootte. Dus bijvoorbeeld 4,05x10-5 staat verder naar rechts dan 0,1 omdat 4,05x10-5 dus met een 4 begint. CompConcentration is een character kolom, dus daarom gebeurt dit. Er wordt niet ‘rekening gehouden’ met de machten. Om de X-as leesbaarder te maken, heb ik de kolom compConcentration naar numeric veranderd en heb ik de Log10 van de concentratie geplot. Ook heb ik geom_jitter gebruikt om wat afstand te creëren tussen de datapunten, zodat de grafiek nog wat duidelijker wordt. Tidydata$compConcentration &lt;- as.numeric(Tidydata$compConcentration) Tidydata %&gt;% ggplot(aes(x = (log10(compConcentration + 0.001)), y = RawData, colour = compName, shape = expType)) + geom_point() + geom_jitter(position = position_jitter(0.2)) De positieve controle waren C. Elegans die met Ethanol zijn behandeld. De negatieve controle waren C. Elegans die met S-medium zijn behandeld. Om te analyseren of verschillende concentraties effect hebben op de hoeveelheid nakomelingen, zou ik aparte tabellen maken per stof (en per concentratie?). Dan kan je het gemiddelde en de standaard deviatie per stof en per concentratie berekenen. Ook kan je dan per stof een ANOVA test uitvoeren, om te kijken of het effect significant is. Dus 1. Aparte tabellen maken met de metingen per stof. 2. Het gemiddelde en de standaardeviatie berekenen voor elke concentratie van elke stof. 3. Een ANOVA test uitvoeren voor elke stof om te kijken of er dus inderdaad significante verschillen zijn in effect tussen de concentraties. Om te analyseren of de verschillende stoffen een andere curve/IC50 hebben, moet je per stof kijken naar het effect op de hoeveelheid nakomelingen. Daar kan je een grafiek van maken, met op de x-as de concentratie van de stof en op de y-as de hoeveelheid nakomelingen. Deze grafieken zou je bijvoorbeeld in hetzelfde assenstelsel kunnen plotten, om ze met elkaar te kunnen vergelijken. Als laatste heb ik de data genormaliseerd voor de negatieve controle en dat weer geplot in een scatter plot. Tidydata$compConcentration &lt;- as.numeric(Tidydata$compConcentration) Tibble_mean &lt;- Tidydata %&gt;% group_by(compName, compConcentration) %&gt;% summarize(by = &quot;compName&quot;, mean = mean(RawData, na.rm = TRUE)) # Het gemiddelde van de negatieve controle, S-medium, is 85,9. Dat is dus de waarde waar de andere gemiddelden voor genormaliseerd moeten worden. Tibble_mean &lt;- Tibble_mean %&gt;% mutate(mean_norm = mean / 85.9) Tibble_mean %&gt;% ggplot(aes(x = (log10(compConcentration + 0.001)), y = mean_norm, colour = compName, shape = compName)) + geom_point() + geom_line() + labs(title = &quot;The effect of different compounds on the amount of offspring&quot;, x = &quot;Compound concentration (log10 + 0.001)&quot;, y = &quot;Mean offspring, normalised for S-medium&quot;) Dit heb ik gedaan omdat je dan duidelijker het effect kan zien van de verschillende stoffen en verschillende concentraties. De grafiek is veel overzichtelijker op deze manier. Ook kan je duidelijk per stof en per concentratie het verschil zien met de negatieve controle. "],["reading-two-different-studies-and-recreating-some-of-the-code.html", "3 Reading two different studies and recreating some of the code 3.1 Part 1 3.2 Part 2", " 3 Reading two different studies and recreating some of the code This was the second assignment for our portfolio. We had to look up two different articles, answer some questions about it and recreate some of the code from one of the articles. 3.1 Part 1 Link to the study: https://pubmed.ncbi.nlm.nih.gov/29324233/ Category Score Study_purpose TRUE Data_availability_statement TRUE Data_location TRUE Study_location TRUE Author_review 7 Ethics_statement FALSE Funding_statement TRUE Code_availability TRUE In this study, researchers investigated the heterologous effects of Bacillus Calmette-Guérin (BCG) vaccination against other, non-related virus infections. It has been known for some time that BCG vaccination has positive heterologous effects against other virusses, but the exact immunological basis for this effect has never been examined in depth. The researchers in this study examined the genome-wide histone modifications that take place as a result of BCG vaccination, and also examined the functional changes in monocytes that take place after BCG vaccination. The effect of BCG vaccination on viral, serological and immunological parameters after administration of the Yellow Fever Vaccine was also examined. The method used for this study was ChIP-sequencing, to look at genome-wide changes in the distribution of H3K27ac. H3K27ac is a marker of active promoters and enhancers. This was done before BCG vaccination and one month after BCG vaccination. Correlation plots showed a clear distinction between the two kinds of samples. Most changes between the two kinds of samples were related to G-protein coupled receptors and protein kinases, which shows that BCG vaccination has a substantial effect on remodeling signal transduction molecules. The researchers also showed that the cytokine response to unrelated pathogens was enhanced one month after BCG vaccination. The heterologous T-cell response was also moderately enhanced after BCG vaccination. Next, this study looked at the difference in immune response to the Yellow Fever Vaccine between people who had had the BCG vaccination, and people who hadn’t. People who had had the vaccine had a significantly lower viremia compared to people who had had the placebo vaccine. It was seen that mainly increased IL1-B and IL-10 production predicted a lower viremia in subjects who had had the BCG vaccine. 3.2 Part 2 Link to the study: https://osf.io/aqycd/ The code is very readable, 4. Recreating figure 1A library(tidyverse) library(ggplot2) library(here) library(viridis) ################################################################################################## ##### Descriptives; d &lt;- as_tibble(read.csv2(here(&quot;Data/Data_LittSurvey_Box1.csv&quot;))) d &lt;- d %&gt;% mutate(Hypo=ifelse(Clearly.stated.hypothesis&gt;1, 1, 0)) %&gt;% mutate(Experiment=ifelse(Study.design==&quot;Experimental&quot;, 1,0)) %&gt;% mutate(YearLaps=abs(Year-2016)) %&gt;% mutate(Scope2=ifelse(Scope==&quot;Methods&quot;, &quot;Methods&quot;, &quot;Biodiversity response&quot;)) %&gt;% mutate(Hypothesis2=Clearly.stated.hypothesis) %&gt;% mutate(Hypothesis2=ifelse(Hypothesis2==0, &quot;No&quot;, ifelse(Hypothesis2==1, &quot;Partly&quot;, ifelse(Hypothesis2==2, &quot;Implied&quot;, &quot;Clearly stated&quot;)))) ############################################### ##### cleary stated hypotheis; ## Plotting results; ## Clearly stated hypothesis; ## Figure 1a Hypothesis_prop &lt;- d %&gt;% group_by(Hypothesis2, Scope2) %&gt;% count(Clearly.stated.hypothesis) %&gt;% mutate(prop=prop.table(n)) %&gt;% mutate(Hypothesis3= factor(Hypothesis2, levels=c(&quot;No&quot;, &quot;Implied&quot;, &quot;Partly&quot;, &quot;Clearly stated&quot;))) %&gt;% mutate(Scope3= factor(Scope2, levels=c(&quot;Methods&quot;, &quot;Biodiversity response&quot;))) Hypothesis_prop2 &lt;- d %&gt;% filter(Scope==&quot;Ecological processes&quot;) %&gt;% count(Clearly.stated.hypothesis) %&gt;% mutate(prop=prop.table(n)) p &lt;- ggplot(data=Hypothesis_prop, aes(x=Hypothesis3, y=n, fill=Scope3)) + geom_bar(stat=&quot;identity&quot;, width=0.7, ) + theme_minimal() + theme(text = element_text(size=15), legend.position = &quot;bottom&quot;, legend.title = element_blank(), axis.text.y = element_text(size=17)) + ylim(0, 100)+ labs(x=&quot;&quot;, y=&quot;Number of articles&quot;, title=&quot;&quot;) + scale_fill_brewer(palette=&quot;Blues&quot;) p+coord_flip() In the field of applied ecological research, the lines between exploratory research and confirmatory research are becoming more and more blurred. A lot of researchers in the field of applied ecology do not follow the strong inference paradigm. This means that a lot of researchers in this field often don’t devise an alternative hypothesis when they’re conducting their research. What’s more, they often don’t even devise a hypothesis before conducting their research. This is dangerous, and could, for example, lead to more confirmation bias in this field. The researchers of this paper looked at 159 papers from conservation/applied ecology/wildife journals. They scored all the papers on certain criteria, to see how the experiments were conducted. This figure displays the amount of papers that had either a clearly stated hypothesis or not, divided by what the research focussed on: methods or biodiversity response. Reproducibility of the code: 5. It was very easy, I barely needed to change anything before I got the pretty graph :) "],["cleaning-up-according-to-the-guerrilla-analytics-framework.html", "4 Cleaning up according to the Guerrilla analytics framework", " 4 Cleaning up according to the Guerrilla analytics framework This was the third assignment for our portfolio. We had to apply the Guerrilla analytics framework to our DAUR2 folder. fs::dir_tree(path = here(&quot;Daur2&quot;), type = &quot;directory&quot;) ## C:/Users/lautj/Documents/DSFB2/portfolio/Daur2 ## ├── Code ## ├── Data ## │ ├── Metagenomics ## │ │ ├── Data_raw ## │ │ └── Supporting ## │ └── RNA_seq ## │ └── Data_raw ## ├── R ## └── Rmd "],["cv.html", "5 CV 5.1 Persoonlijke informatie 5.2 Opleiding 5.3 Ervaring/skills 5.4 Talen", " 5 CV This was the fourth assignment for our portfolio. We had to put our CV in a markdown. 5.1 Persoonlijke informatie Naam: Laurine Seelt Emailadres: - Telefoonnummer: - Adres: - Postcode: - Woonplaats: - 5.2 Opleiding 2019 - heden Bachelor Life Sciences, Hogeschool Utrecht 2012 - 2018 VWO, Erfgooiers College te Huizen 5.3 Ervaring/skills (q)PCR, Western Blot, ELISA, MALDI-TOF, Bash, R, SQL, 5.4 Talen Nederlands, moedertaal. Engels, vloeiend. "],["free-space.html", "6 Free space 6.1 Course: Introduction to the statistical analysis of microbiome data in R 6.2 Course: Microbiota analysis in R", " 6 Free space This was the fifth assignment for our portfolio. We had/have to fill 32 hours learning something new that will be useful for our internship next year and possibly our job. Uitzoeken welke automatiseringen er op microbiologische labs worden gebruikt. Metagenomics? https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-020-03933-4 (megaR package) http://web.evolbio.mpg.de/~wang/Site/R_tutorial_files/16S%20Metagenomic%20Analysis%20Tutorial.pdf (random tutorial) https://www.mcs.anl.gov/~braithwaite/matR/docs-and-pubs/matR-user-manual.pdf (matR package) https://rpubs.com/jrandall7/EICC16s (phyloseq) https://cran.r-project.org/web/packages/microbial/microbial.pdf (microbial package) https://bioconductor.org/help/course-materials/2017/BioC2017/Day1/Workshops/Microbiome/MicrobiomeWorkflowII.html (aritkel over microbioom analyse workflow) https://www.nicholas-ollberding.com/post/introduction-to-the-statistical-analysis-of-microbiome-data-in-r/ (soort course over de analyse van microbioom data) https://rstudio-pubs-static.s3.amazonaws.com/268156_d3ea37937f4f4469839ab6fa2c483842.html (ook een course over de analyse van microbiota data) https://grunwaldlab.github.io/analysis_of_microbiome_community_data_in_r/04--manipulating.html (nog een course) - Python? 6.1 Course: Introduction to the statistical analysis of microbiome data in R Link to the course: https://www.nicholas-ollberding.com/post/introduction-to-the-statistical-analysis-of-microbiome-data-in-r/ In this course, we examined the differences in microbiota between patients with and without chronic fatigue syndrome. The aspects that were looked at were: Taxonomic relative abundance Hierarchal clustering Alpha-diversity (microbiome diversity in just one sample) Beta-divesity (microbiome diversity in two or more samples) Diffrential abundance testing Predicting class labels .cran_packages &lt;- c(&quot;tidyverse&quot;, &quot;cowplot&quot;, &quot;picante&quot;, &quot;vegan&quot;, &quot;HMP&quot;, &quot;dendextend&quot;, &quot;rms&quot;, &quot;devtools&quot;) .bioc_packages &lt;- c(&quot;phyloseq&quot;, &quot;DESeq2&quot;, &quot;microbiome&quot;, &quot;metagenomeSeq&quot;, &quot;ALDEx2&quot;) .inst &lt;- .cran_packages %in% installed.packages() if(any(!.inst)) { install.packages(.cran_packages[!.inst]) } if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(.bioc_packages, version = &quot;3.15&quot;) #Changed 3.9 to 3.15 devtools::install_github(&quot;adw96/breakaway&quot;) devtools::install_github(repo = &quot;malucalle/selbal&quot;) #changed UVic-omics to malucalle library(tidyverse) library(phyloseq) library(DESeq2) library(microbiome) library(vegan) library(picante) library(ALDEx2) library(metagenomeSeq) library(HMP) library(dendextend) library(selbal) library(rms) library(breakaway) # Reading in the data ps &lt;- readRDS(&quot;Data/Data_raw/ps_giloteaux_2016.rds&quot;) # Sorting the samples on total read count sort(phyloseq::sample_sums(ps)) ## ERR1331827 ERR1331852 ERR1331856 ERR1331869 ERR1331833 ERR1331797 ERR1331786 ## 2707 3031 3117 5083 5245 5307 5696 ## ERR1331818 ERR1331792 ERR1331803 ERR1331793 ERR1331819 ERR1331858 ERR1331807 ## 5733 6463 6512 6622 6900 6913 7121 ## ERR1331815 ERR1331821 ERR1331843 ERR1331795 ERR1331846 ERR1331811 ERR1331845 ## 7179 7272 7284 7314 7569 7665 7815 ## ERR1331842 ERR1331838 ERR1331855 ERR1331824 ERR1331832 ERR1331804 ERR1331868 ## 7911 8102 8115 8148 8186 8236 8612 ## ERR1331831 ERR1331859 ERR1331790 ERR1331789 ERR1331837 ERR1331857 ERR1331801 ## 8840 9016 9085 9184 9731 9966 11173 ## ERR1331841 ERR1331861 ERR1331820 ERR1331854 ERR1331863 ERR1331806 ERR1331787 ## 11442 11826 12940 13029 13094 13095 13690 ## ERR1331853 ERR1331851 ERR1331836 ERR1331835 ERR1331802 ERR1331799 ERR1331847 ## 14113 14365 14488 14753 14799 14833 15290 ## ERR1331834 ERR1331817 ERR1331809 ERR1331828 ERR1331813 ERR1331798 ERR1331816 ## 15367 15460 16162 16494 16749 16947 17015 ## ERR1331830 ERR1331785 ERR1331823 ERR1331865 ERR1331848 ERR1331800 ERR1331867 ## 17457 17557 18506 19013 19257 19443 19732 ## ERR1331870 ERR1331810 ERR1331825 ERR1331866 ERR1331871 ERR1331849 ERR1331860 ## 19783 19909 20069 20760 20862 21540 21553 ## ERR1331808 ERR1331872 ERR1331812 ERR1331850 ERR1331791 ERR1331788 ERR1331796 ## 21713 22339 22518 22639 23246 23751 23792 ## ERR1331840 ERR1331826 ERR1331822 ERR1331862 ERR1331864 ERR1331829 ERR1331844 ## 24752 28186 28556 31064 44533 51918 57214 ## ERR1331805 ERR1331839 ERR1331794 ## 59355 61206 65941 # Removing (samples with?) less than 5000 reads (ps &lt;- phyloseq::subset_samples(ps, phyloseq::sample_sums(ps) &gt; 5000)) ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 138 taxa and 84 samples ] ## sample_data() Sample Data: [ 84 samples by 22 sample variables ] ## tax_table() Taxonomy Table: [ 138 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 138 tips and 136 internal nodes ] ## refseq() DNAStringSet: [ 138 reference sequences ] # Removing the OTU&#39;s that were only present in the removed samples (ps &lt;- phyloseq::prune_taxa(phyloseq::taxa_sums(ps) &gt; 0, ps)) ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 138 taxa and 84 samples ] ## sample_data() Sample Data: [ 84 samples by 22 sample variables ] ## tax_table() Taxonomy Table: [ 138 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 138 tips and 136 internal nodes ] ## refseq() DNAStringSet: [ 138 reference sequences ] # Assigning a new metadata field phyloseq::sample_data(ps)$Status &lt;- ifelse(phyloseq::sample_data(ps)$Subject == &quot;Patient&quot;, &quot;Chronic Fatique&quot;, &quot;Control&quot;) phyloseq::sample_data(ps)$Status &lt;- factor(phyloseq::sample_data(ps)$Status, levels = c(&quot;Control&quot;, &quot;Chronic Fatique&quot;)) ps %&gt;% sample_data %&gt;% dplyr::count(Status) ## $Status ## [1] Control Chronic Fatique ## Levels: Control Chronic Fatique ## ## $n ## [1] 37 47 ## ## attr(,&quot;row.names&quot;) ## [1] 1 2 ## attr(,&quot;class&quot;) ## [1] &quot;sample_data&quot; ## attr(,&quot;class&quot;)attr(,&quot;package&quot;) ## [1] &quot;phyloseq&quot; ## attr(,&quot;.S3Class&quot;) ## [1] &quot;data.frame&quot; # Counting all the phyla in the dataset table(phyloseq::tax_table(ps)[, &quot;Phylum&quot;]) ## ## Actinobacteria Bacteroidetes Cyanobacteria Euryarchaeota Firmicutes ## 7 11 2 1 105 ## Fusobacteria Proteobacteria Tenericutes Verrucomicrobia ## 1 7 2 1 # Convert the samples to relative abundances ps_rel_abund = phyloseq::transform_sample_counts(ps, function(x){x / sum(x)}) phyloseq::otu_table(ps)[1:5, 1:5] # Before we converted it to relative abundances ## OTU Table: [5 taxa and 5 samples] ## taxa are rows ## ERR1331793 ERR1331872 ERR1331819 ERR1331794 ERR1331851 ## OTU1 2 581 347 916 10498 ## OTU2 371 46 0 233 301 ## OTU3 1189 81 637 199 0 ## OTU4 0 172 246 0 372 ## OTU5 308 44 143 155 221 phyloseq::otu_table(ps_rel_abund)[1:5, 1:5] # After we calculated the relative abundances ## OTU Table: [5 taxa and 5 samples] ## taxa are rows ## ERR1331793 ERR1331872 ERR1331819 ERR1331794 ERR1331851 ## OTU1 0.0003020236 0.026008326 0.05028986 0.013891206 0.73080404 ## OTU2 0.0560253700 0.002059179 0.00000000 0.003533462 0.02095371 ## OTU3 0.1795530051 0.003625946 0.09231884 0.003017849 0.00000000 ## OTU4 0.0000000000 0.007699539 0.03565217 0.000000000 0.02589628 ## OTU5 0.0465116279 0.001969649 0.02072464 0.002350586 0.01538462 # Plotting the relative abundances, devided by the two groups phyloseq::plot_bar(ps_rel_abund, fill = &quot;Phylum&quot;)+ geom_bar(aes(color = Phylum, fill = Phylum), stat = &quot;identity&quot;, position = &quot;stack&quot;)+ labs(x = &quot;&quot;, y = &quot;Relative Abundance\\n&quot;)+ facet_wrap(~ Status, scales = &quot;free&quot;)+ theme(panel.background = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank()) # Sorting the taxa by their relative abundance sort(ps_rel_abund@tax_table[[&quot;Phylum&quot;]], decreasing = TRUE) %&gt;% phyloseq::plot_bar(fill = &quot;Phylum&quot;)+ geom_bar(aes(color = Phylum, fill = Phylum), stat = &quot;identity&quot;, position = &quot;stack&quot;)+ labs(x = &quot;&quot;, y = &quot;Relative Abundance\\n&quot;)+ facet_wrap(~ Status, scales = &quot;free&quot;)+ theme(panel.background = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank()) # Grouping the taxa according to phylum and renaming the groups ps_phylum &lt;- phyloseq::tax_glom(ps, &quot;Phylum&quot;) phyloseq::taxa_names(ps_phylum) &lt;- phyloseq::tax_table(ps_phylum)[, &quot;Phylum&quot;] phyloseq::otu_table(ps_phylum)[1:5, 1:5] ## OTU Table: [5 taxa and 5 samples] ## taxa are rows ## ERR1331793 ERR1331872 ERR1331819 ERR1331794 ERR1331851 ## Bacteroidetes 1903 878 1837 1969 11776 ## Proteobacteria 119 3315 468 62358 319 ## Firmicutes 4319 14429 3548 1609 2207 ## Actinobacteria 30 976 17 0 58 ## Cyanobacteria 246 0 0 0 0 # Melting the data and making the boxplots phyloseq::psmelt(ps_phylum) %&gt;% ggplot(data = ., aes(x = Status, y = Abundance))+ geom_boxplot(outlier.shape = NA)+ geom_jitter(aes(colour = OTU), height = 0, width = 0.2)+ labs(x = &quot;&quot;, y = &quot;Abundance\\n&quot;)+ facet_wrap(~ OTU, scales = &quot;free&quot;) # Making two subsets controls &lt;- phyloseq::subset_samples(ps_phylum, Status == &quot;Control&quot;) cf &lt;- phyloseq::subset_samples(ps_phylum, Status = &quot;Chronic Fatigue&quot;) # Looking at the OTU tables control_otu &lt;- data.frame(phyloseq::otu_table(controls)) cf_otu &lt;- data.frame(phyloseq::otu_table(cf)) # Grouping the rare phyla to improve testing control_otu &lt;- control_otu %&gt;% t(.) %&gt;% as.data.frame(.) %&gt;% mutate(Other = Cyanobacteria + Euryarchaeota + Tenericutes + Verrucomicrobia + Fusobacteria) %&gt;% dplyr::select(-Cyanobacteria, -Euryarchaeota, -Tenericutes, -Verrucomicrobia, -Fusobacteria) cf_otu &lt;- cf_otu %&gt;% t(.) %&gt;% as.data.frame(.) %&gt;% mutate(Other = Cyanobacteria + Euryarchaeota + Tenericutes + Verrucomicrobia + Fusobacteria) %&gt;% dplyr::select(-Cyanobacteria, -Euryarchaeota, -Tenericutes, -Verrucomicrobia, -Fusobacteria) # Performing the HMP test group_data &lt;- list(control_otu, cf_otu) (xdc &lt;- HMP::Xdc.sevsample(group_data)) ## $`Xdc statistics` ## [1] -0.3510664 ## ## $`p value` ## [1] 1 1 - pchisq(0.2769004, 5) # Looking at the Chi-Squared distribution ## [1] 0.9980551 Since the P-value of the HMP test is nearly 1, we cannot reject the null hypothesis that there is no statistical significant distribution of phyla between the two groups. Looking at the hierarchical clustering in the samples # Extracting the OTU table ps_rel_otu &lt;- data.frame(phyloseq::otu_table(ps_rel_abund)) ps_rel_otu &lt;- t(ps_rel_otu) # Computing the Bray-Curtis dissimilarity bc_dist &lt;- vegan::vegdist(ps_rel_otu, method = &quot;bray&quot;) # Generating a matrix with the dissimilarities as.matrix(bc_dist)[1:5, 1:5] ## ERR1331793 ERR1331872 ERR1331819 ERR1331794 ERR1331851 ## ERR1331793 0.0000000 0.8801040 0.5975550 0.9767218 0.8684629 ## ERR1331872 0.8801040 0.0000000 0.7590766 0.9596181 0.9206484 ## ERR1331819 0.5975550 0.7590766 0.0000000 0.9556656 0.7810736 ## ERR1331794 0.9767218 0.9596181 0.9556656 0.0000000 0.9693291 ## ERR1331851 0.8684629 0.9206484 0.7810736 0.9693291 0.0000000 # Saving it as a dendrogram ward &lt;- as.dendrogram(hclust(bc_dist, method = &quot;ward.D2&quot;)) # Adding color coding meta &lt;- data.frame(phyloseq::sample_data(ps_rel_abund)) colorCode &lt;- c(Control = &quot;red&quot;, `Chronic Fatigue` = &quot;blue&quot;) labels_colors(ward) &lt;- colorCode[meta$Status][order.dendrogram(ward)] # Plotting the dendrogram plot(ward) plot_heatmap(cf) plot_heatmap(controls) Looking at the alpha diversity Alpha diversity looks at the diversity within a sample and how the observed OTU’s are distributed. # Plotting the observed richness ggplot(data = data.frame(&quot;total_reads&quot; = phyloseq::sample_sums(ps), &quot;observed&quot; = phyloseq::estimate_richness(ps, measures = &quot;Observed&quot;)[, 1]), aes(x = total_reads, y = observed)) + geom_point() + geom_smooth(method=&quot;lm&quot;, se = FALSE) + labs(x = &quot;\\nTotal Reads&quot;, y = &quot;Observed richness\\n&quot;) Now we’re going to subsample the reads, plot them and test for group differences # Subsample reads (ps_rare &lt;- phyloseq::rarefy_even_depth(ps, rngseed = 123, replace = FALSE)) ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 138 taxa and 84 samples ] ## sample_data() Sample Data: [ 84 samples by 23 sample variables ] ## tax_table() Taxonomy Table: [ 138 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 138 tips and 136 internal nodes ] ## refseq() DNAStringSet: [ 138 reference sequences ] head(phyloseq::sample_sums(ps_rare)) ## ERR1331793 ERR1331872 ERR1331819 ERR1331794 ERR1331851 ERR1331834 ## 5083 5083 5083 5083 5083 5083 # Making a dataframe with the adiv measures, another package to analyse and measure biodiversity adiv &lt;- data.frame(&quot;Observed&quot; = phyloseq::estimate_richness(ps_rare, measures = &quot;Observed&quot;), &quot;Shannon&quot; = phyloseq::estimate_richness(ps_rare, measures = &quot;Shannon&quot;), &quot;PD&quot; = picante::pd(samp = data.frame(t(data.frame(phyloseq::otu_table(ps_rare)))), include.root = FALSE, tree=phyloseq::phy_tree(ps_rare))[, 1], &quot;Status&quot; = phyloseq::sample_data(ps_rare)$Status) # Zelf &quot;include.root = FALSE&quot; toegevoegd, anders kreeg ik steeds een error head(adiv) ## Observed Shannon PD Status ## ERR1331793 53 2.7462377 20.566952 Chronic Fatique ## ERR1331872 52 2.7527053 21.258691 Control ## ERR1331819 70 3.2378006 21.640313 Control ## ERR1331794 27 0.3761523 8.275154 Chronic Fatique ## ERR1331851 45 1.3387308 14.649204 Chronic Fatique ## ERR1331834 54 2.8883445 20.957612 Control # Plotting the adiv measures adiv %&gt;% gather(key = metric, value = value, c(&quot;Observed&quot;, &quot;Shannon&quot;, &quot;PD&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;Observed&quot;, &quot;Shannon&quot;, &quot;PD&quot;))) %&gt;% ggplot(aes(x = Status, y = value)) + geom_boxplot(outlier.color = NA) + geom_jitter(aes(color = Status), height = 0, width = 0.2) + labs(x = &quot;&quot;, y = &quot;&quot;) + facet_wrap(~metric, scales = &quot;free&quot;) + theme(legend.position = &quot;none&quot;) # Summarising the data adiv %&gt;% group_by(Status) %&gt;% dplyr::summarise(median_observed = median(Observed), median_shannon = median(Shannon), median_pd = median(PD)) ## # A tibble: 2 × 4 ## Status median_observed median_shannon median_pd ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Control 49 2.40 18.1 ## 2 Chronic Fatique 46 2.30 17.0 # Performing the Wilcoxon tests for the three estimates wilcox.test(Observed ~ Status, data = adiv, exact = FALSE, conf.int = TRUE) ## ## Wilcoxon rank sum test with continuity correction ## ## data: Observed by Status ## W = 1007.5, p-value = 0.2146 ## alternative hypothesis: true location shift is not equal to 0 ## 95 percent confidence interval: ## -1.000059 5.000002 ## sample estimates: ## difference in location ## 2.000087 wilcox.test(Shannon ~ Status, data = adiv, conf.int = TRUE) ## ## Wilcoxon rank sum exact test ## ## data: Shannon by Status ## W = 1037, p-value = 0.1329 ## alternative hypothesis: true location shift is not equal to 0 ## 95 percent confidence interval: ## -0.04346366 0.39218192 ## sample estimates: ## difference in location ## 0.1421467 wilcox.test(PD ~ Status, data = adiv, conf.int = TRUE) ## ## Wilcoxon rank sum exact test ## ## data: PD by Status ## W = 998, p-value = 0.2503 ## alternative hypothesis: true location shift is not equal to 0 ## 95 percent confidence interval: ## -0.7340479 2.1737379 ## sample estimates: ## difference in location ## 0.7063854 Looking at the beta diversity Beta diversity looks at the diversity between samples and how it’s similar or dissimilar. # Transforming the Total Read Counts according to the Centered Log Ratio method (ps_clr &lt;- microbiome::transform(ps, &quot;clr&quot;)) ## phyloseq-class experiment-level object ## otu_table() OTU Table: [ 138 taxa and 84 samples ] ## sample_data() Sample Data: [ 84 samples by 23 sample variables ] ## tax_table() Taxonomy Table: [ 138 taxa by 7 taxonomic ranks ] ## phy_tree() Phylogenetic Tree: [ 138 tips and 136 internal nodes ] ## refseq() DNAStringSet: [ 138 reference sequences ] phyloseq::otu_table(ps)[1:5, 1:5] # Old OTU table ## OTU Table: [5 taxa and 5 samples] ## taxa are rows ## ERR1331793 ERR1331872 ERR1331819 ERR1331794 ERR1331851 ## OTU1 2 581 347 916 10498 ## OTU2 371 46 0 233 301 ## OTU3 1189 81 637 199 0 ## OTU4 0 172 246 0 372 ## OTU5 308 44 143 155 221 phyloseq::otu_table(ps_clr)[1:5, 1:5] # New OTU table ## OTU Table: [5 taxa and 5 samples] ## taxa are rows ## ERR1331793 ERR1331872 ERR1331819 ERR1331794 ERR1331851 ## OTU1 1.289544 5.812706 5.615063 6.230204 9.467837 ## OTU2 6.485240 3.280355 -3.079591 4.863001 5.916398 ## OTU3 7.649802 3.844401 6.222432 4.705673 -1.903003 ## OTU4 -2.317399 4.596219 5.271139 -1.178342 6.128105 ## OTU5 6.299168 3.236089 4.728822 4.456584 5.607596 # The value are now the dominance for each taxa relative to the geometric mean of all taxa on the logarithmic scale 6.2 Course: Microbiota analysis in R Link to the course: https://rstudio-pubs-static.s3.amazonaws.com/268156_d3ea37937f4f4469839ab6fa2c483842.html In this course, we will be looking at the fecal bacterial microbiota of 8 calves at ages 2 weeks, 8 weeks and 1 year old and correlating them with variables such as weight gain, expressed as Average Daily Gain in Kilograms(ADGKG), and gastrointestinal short chain fatty acids, SCFA. # install.packages(&quot;ape&quot;) library(ape) library(dplyr) library(ggplot2) library(gplots) library(lme4) library(phangorn) library(plotly) library(tidyr) library(here) library(vegan) # install.packages(&quot;VennDiagram&quot;) library(VennDiagram) # Installed Java from: https://www.java.com/en/download/manual.jsp # Installed Java JDk from: https://www.oracle.com/java/technologies/downloads/#jdk18-windows # install.packages(&quot;rJava&quot;) library(rJava) # install.packages(&quot;venneuler&quot;) library(venneuler) # if (!require(&quot;BiocManager&quot;, quietly = TRUE)) # install.packages(&quot;BiocManager&quot;) # BiocManager::install(version = &quot;3.15&quot;) # Instead of source(&quot;https://bioconductor.org/biocLite.R&quot;) # BiocManager::install(&quot;phyloseq&quot;) # Instead of biocLite(&quot;phyloseq&quot;) ? # Downloaded the data from: https://github.com/kdillmcfarland/workshops_UW_Madison/tree/master/Microbiota_analysis_R/Data OTU = read.table(&quot;Data/example.final.an.unique_list.0.03.norm.shared.txt&quot;, header = TRUE, sep = &quot;\\t&quot;) tax = read.table(&quot;Data/example.final.an.unique_list.0.03.cons.taxonomy.txt&quot;, header = TRUE, sep = &quot;\\t&quot;) meta = read.table(&quot;Data/example.metadata.txt&quot;, header = TRUE, row.names = 1, sep = &quot;\\t&quot;) SCFA = read.table(&quot;Data/example.SCFA.txt&quot;, header = TRUE, row.names = 1, sep = &quot;\\t&quot;) # Setting the &quot;Group&quot; column as row names in the OTU dataset row.names(OTU) = OTU$Group # Removing the columns that are not OTU counts OTU.clean = OTU[,-which(names(OTU) %in% c(&quot;label&quot;, &quot;numOtus&quot;, &quot;Group&quot;))] # Setting the &quot;OTU&quot; column as row names in the taxonomy table row.names(tax) = tax$OTU # Removing the OTU&#39;s that aren&#39;t present in the OTU.clean dataset tax.clean = tax[row.names(tax) %in% colnames(OTU.clean),] # Separating the taxonomy table so each level has its own column tax.clean = separate(tax.clean, Taxonomy, into = c(&quot;Domain&quot;, &quot;Phylum&quot;, &quot;Class&quot;, &quot;Order&quot;, &quot;Family&quot;, &quot;Genus&quot;, &quot;Species&quot;, &quot;Strain&quot;), sep = &quot;;&quot;) # Removing the &quot;Size&quot;, &quot;Strain&quot; and &quot;OTU&quot; columns because these are now row names tax.clean = tax.clean[,-which(names(tax.clean) %in% c(&quot;Size&quot;, &quot;Strain&quot;, &quot;OTU&quot;))] # Making sure the three datasets have samples in the same order OTU.clean = OTU.clean[order(row.names(OTU.clean)),] meta = meta[order(row.names(meta)),] SCFA = SCFA[order(row.names(SCFA)),] # set.seed to make the analysis reproducible set.seed(8765) Looking at the alpha diversity Alpha diversity is the diversity within a sample. It looks at richness, which is the amount of OTU’s in each sample, and at evenness, which is how evenly the different OTU’s are distributed within the sample. # Creating a 2x2 plot environment so we can see all 4 metrics at once par(mfrow = c(2,2)) # Plotting the four metrics hist(meta$shannon, main = &quot;Shannon diversity&quot;, xlab = &quot;&quot;, breaks = 10) hist(meta$simpson, main = &quot;Simpson diversity&quot;, xlab = &quot;&quot;, breaks = 10) hist(meta$chao, main = &quot;Chao richness&quot;, xlab = &quot;&quot;, breaks = 15) hist(meta$ace, main = &quot;ACE richness&quot;, xlab = &quot;&quot;, breaks = 15) None of the data are normally distributed. Simpson diversity is very often skewed as seen in this histogram, so we’ll calculate 1/Simpson and plot the metrics again. # Creating a 2x2 environment par(mfrow = c(2,2)) # Plotting the four metrics again hist(meta$shannon, main = &quot;Shannon diversity&quot;, xlab = &quot;&quot;, breaks = 10) hist(1/meta$simpson, main = &quot;Inverse Simpson diversity&quot;, xlab = &quot;&quot;, breaks = 10) hist(meta$chao, main = &quot;Chao richness&quot;, xlab = &quot;&quot;, breaks = 15) hist(meta$ace, main = &quot;ACE richness&quot;, xlab = &quot;&quot;, breaks = 15) Now the Simpson diversity is distributed similarly to the other richness metrics. Next, we’ll test the four metrics for normal distribution. shapiro.test(meta$shannon) ## ## Shapiro-Wilk normality test ## ## data: meta$shannon ## W = 0.91511, p-value = 0.0456 shapiro.test(1/meta$simpson) ## ## Shapiro-Wilk normality test ## ## data: 1/meta$simpson ## W = 0.74821, p-value = 4.69e-05 shapiro.test(meta$chao) ## ## Shapiro-Wilk normality test ## ## data: meta$chao ## W = 0.80636, p-value = 0.0003749 shapiro.test(meta$ace) ## ## Shapiro-Wilk normality test ## ## data: meta$ace ## W = 0.83017, p-value = 0.0009573 None of the richness metrics are normally distributed, which was to be expected from the graphs we’ve seen. So we cannot run any tests that assume the data is normally distributed. For illustration purposes, we’ll run the ANOVA test with the Shannon’s diversity because that’s the closest to normally distributed. We’ll look at if age impacts the Shannon diversity of the fecal microbiota. aov.shannon.age = aov(shannon ~ AgeGroup, data = meta) summary(aov.shannon.age) ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## AgeGroup 2 42.98 21.489 103.4 1.35e-11 *** ## Residuals 21 4.36 0.208 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 We’ll run Tukey’s honest significance test to do pairwise comparisons between groups and correct for multiple comparisons. TukeyHSD(aov.shannon.age) ## Tukey multiple comparisons of means ## 95% family-wise confidence level ## ## Fit: aov(formula = shannon ~ AgeGroup, data = meta) ## ## $AgeGroup ## diff lwr upr p adj ## 2w-1yr -3.270063 -3.8446230 -2.695503 0.0e+00 ## 8w-1yr -1.830903 -2.4054628 -1.256342 2.0e-07 ## 8w-2w 1.439160 0.8646001 2.013720 8.5e-06 It’s clear that all age groups have significantly different diversity. In a plot, we can clearly see that diversity increases with ages. # Re-ordering the groups meta$AgeGroup.ord = factor(meta$AgeGroup, c(&quot;2w&quot;, &quot;8w&quot;, &quot;1yr&quot;)) # Returning the plot area to 1x1 par(mfrow = c(1,1)) # Plotting the diversity boxplot(shannon ~ AgeGroup.ord, data = meta, ylab = &quot;Shannon&#39;s diversity&quot;, xlab = &quot;Age group&quot;) # Added the xlab myself because it looks better :) To illustrate some non-parametric tests, we’ll use Chao’s richness estimate. Age is categorical, so we’ll use Kruskal-Wallis. kruskal.test(chao ~ AgeGroup, data = meta) ## ## Kruskal-Wallis rank sum test ## ## data: chao by AgeGroup ## Kruskal-Wallis chi-squared = 19.28, df = 2, p-value = 6.507e-05 We can also test pairwise within age groups with Wilcoxon Rank Sum Tests. pairwise.wilcox.test(meta$chao, meta$AgeGroup, p.adjust.method = &quot;fdr&quot;) ## ## Pairwise comparisons using Wilcoxon rank sum exact test ## ## data: meta$chao and meta$AgeGroup ## ## 1yr 2w ## 2w 0.00023 - ## 8w 0.00023 0.00186 ## ## P value adjustment method: fdr Just like the diversity, richness also increases with age. # Creating a 1x1 plot environment par(mfrow = c(1,1)) # Plotting the richness boxplot(chao ~ AgeGroup.ord, data = meta, ylab = &quot;Chao richness&quot;, xlab = &quot;Age group&quot;) # Again, added the xlab myself for aesthetics :) Average Daily Gain is a continuous variable, so we’ll use a linear model to visualise it. We’ll use Shannon’s diversity again to run some tests that are meant for normally distributed data. We’ll take a look at if the ADG impacts the Shannon diversity of the fecal microbiota. glm.shannon.ADG = glm(shannon ~ ADGKG, data = meta) summary(glm.shannon.ADG) ## ## Call: ## glm(formula = shannon ~ ADGKG, data = meta) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.49110 -1.11216 -0.01749 1.53658 1.84728 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.62565 1.01390 3.576 0.00169 ** ## ADGKG -0.03407 0.97805 -0.035 0.97253 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for gaussian family taken to be 2.151815) ## ## Null deviance: 47.343 on 23 degrees of freedom ## Residual deviance: 47.340 on 22 degrees of freedom ## AIC: 90.412 ## ## Number of Fisher Scoring iterations: 2 This shows that the intercept of our model is signficantly different from 0, bu the slope is not, and the slope is our variable of interest. Next, let’s plot the glm. plot(shannon ~ ADGKG, data = meta) abline(glm.shannon.ADG) To illustrate non-normally distributed data, we’ll use Chao’s richness estimate again. We’ll first use the Gaussian distribution, but we already know this isn’t a good fit. gaussian.chao.adg = glm(chao ~ADGKG, data = meta, family = &quot;gaussian&quot;) par(mfrow = c(1,2)) plot(gaussian.chao.adg, which = c(1,2)) Next, we’ll plot the quasipoisson distribuiton. qp.chao.ADG = glm(chao ~ ADGKG, data = meta, family = &quot;quasipoisson&quot;) par(mfrow = c(1,2)) plot(qp.chao.ADG, which = c(1,2)) The quasipoisson distribution fits much better than the Gaussian distribution, so we’ll use quasipoisson for further calculations. summary(qp.chao.ADG) ## ## Call: ## glm(formula = chao ~ ADGKG, family = &quot;quasipoisson&quot;, data = meta) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -24.36 -17.05 -10.66 18.81 26.91 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.4528 0.5561 11.605 7.54e-11 *** ## ADGKG -0.1859 0.5438 -0.342 0.736 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for quasipoisson family taken to be 374.2485) ## ## Null deviance: 8117.2 on 23 degrees of freedom ## Residual deviance: 8074.4 on 22 degrees of freedom ## AIC: NA ## ## Number of Fisher Scoring iterations: 5 We’ll plot Chao and ADGKG again, to look at the correlation. par(mfrow = c(1,1)) plot(log(chao) ~ ADGKG, data = meta, ylab = &quot;ln(Chao&#39;s richness)&quot;) abline(qp.chao.ADG) Looking at the graph, there is nog significant correlation between Chao’s richness and the Average Daily Gain. "],["using-github-and-zotero.html", "7 Using GitHub and Zotero", " 7 Using GitHub and Zotero This was the sixth assignment for our portfolio. "],["making-a-website-on-github.html", "8 Making a website on GitHub", " 8 Making a website on GitHub This was the seventh assignment for our portfolio. We had to copy all our HTML’s to a new repository and make it into pretty website. "],["working-with-dbeaver-and-sql.html", "9 Working with DBeaver and SQL", " 9 Working with DBeaver and SQL library(tidyverse) library(readxl) library(dslabs) library(here) First, I read in the flu, dengue and gapminder data. flu &lt;- read_csv(here(&quot;data/flu_data.csv&quot;), skip = 11) dengue &lt;- read_csv(here(&quot;data/dengue_data.csv&quot;), skip = 11) gapminder &lt;- read_builtin(&quot;gapminder&quot;) The flu and dengue data wasn’t tidy yet, so I solved that by .. The gapminder data was tidy already, so I didn’t change anything about that. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
