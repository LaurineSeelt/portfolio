[["sql.html", "9 SQL", " 9 SQL To show that I can work with SQL in DBeaver, I worked with three data sets that I inspected, joined and I made some figures with the joined data set. First, I read in the flu, dengue and gapminder data. flu &lt;- read_csv(here(&quot;data/data_raw/flu_data.csv&quot;), skip = 11) dengue &lt;- read_csv(here(&quot;data/data_raw/dengue_data.csv&quot;), skip = 11) gapminder &lt;- read_builtin(&quot;gapminder&quot;) The flu and dengue data wasn’t tidy yet, so I solved that by using the pivot_longer command to create the column “country” and “cases” in each of the datasets. That way, each country, date and number of cases had its own column. The gapminder data set was already tidy. dengue_tidy &lt;- pivot_longer(data = dengue, cols = c(&quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &quot;Mexico&quot;, &quot;Philippines&quot;, &quot;Singapore&quot;, &quot;Thailand&quot;, &quot;Venezuela&quot;), names_to = &quot;country_d&quot;, values_to = &quot;dengue_cases&quot;) flu_tidy &lt;- pivot_longer(data = flu, cols = c(&quot;Argentina&quot;, &quot;Australia&quot;, &quot;Austria&quot;, &quot;Belgium&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Bulgaria&quot;, &quot;Canada&quot;, &quot;Chile&quot;, &quot;France&quot;, &quot;Germany&quot;, &quot;Hungary&quot;, &quot;Japan&quot;, &quot;Mexico&quot;, &quot;Netherlands&quot;, &quot;New Zealand&quot;, &quot;Norway&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Poland&quot;, &quot;Romania&quot;, &quot;Russia&quot;, &quot;South Africa&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Ukraine&quot;, &quot;United States&quot;, &quot;Uruguay&quot;), names_to = &quot;country_f&quot;, values_to = &quot;flu_cases&quot;) Next, I changed the flu and dengue data some more. I separated the Data column into the three columns “Year”, “Month” and “Day”. I also added a ‘d’ or ‘f’ after the column name “year”, so joining of the data sets in DBeaver will be possible and easy later on. In the gapminder data set, I changed the column “year” to “year_g” to also make joining easier later on in DBeaver. flu_tidy &lt;- separate(flu_tidy, Date, into = c(&quot;year_f&quot;, &quot;month&quot;, &quot;day&quot;), sep = &quot;-&quot;) dengue_tidy&lt;- separate(dengue_tidy, Date, into = c(&quot;year_d&quot;, &quot;month&quot;, &quot;day&quot;), sep = &quot;-&quot;) flu_tidy$country_flu &lt;- as.factor(flu_tidy$country_f) flu_tidy$year &lt;- as.numeric(flu_tidy$year_f) dengue_tidy$country_dengue &lt;- as.factor(dengue_tidy$country_d) dengue_tidy$year &lt;- as.numeric(dengue_tidy$year_d) gapminder$country &lt;- as.factor(gapminder$country) dengue_tidy &lt;- as.data.frame(dengue_tidy) flu_tidy &lt;- as.data.frame(flu_tidy) dengue_tidy &lt;- dengue_tidy %&gt;% group_by(country_d, year_d) %&gt;% summarise_each(funs(sum), dengue_cases) flu_tidy &lt;- flu_tidy %&gt;% group_by(country_f, year_f) %&gt;% summarise_each(funs(sum), flu_cases) # Thanks to https://stackoverflow.com/questions/25089665/error-only-defined-on-a-data-frame-with-all-numeric-variables-with-ddply-on-lar for the summarise_each command :) gapminder &lt;- gapminder %&gt;% rename(year_g = &quot;year&quot;, country_g = &quot;country&quot;) gapminder$year_g &lt;- as.character(gapminder$year_g) Then I saved the three datasets as both .csv files and .rds files. write.csv(flu_tidy, &quot;Data//flu_data_tidy.csv&quot;, row.names = TRUE) write.csv(dengue_tidy, &quot;Data//dengue_data_tidy.csv&quot;, row.names = TRUE) write.csv(gapminder, &quot;Data//gapminder.csv&quot;, row.names = TRUE) saveRDS(flu_tidy, file = &quot;flu_data_tidy.rds&quot;) saveRDS(dengue_tidy, file = &quot;dengue_data_tidy.rds&quot;) saveRDS(gapminder, file = &quot;gapminder.rds&quot;) Next, I inserted the tables into the “workflowsdb” database in DBeaver that I had already made. con &lt;- dbConnect(RPostgres::Postgres(), dbname = &quot;workflowsdb&quot;, host = &quot;localhost&quot;, port = &quot;5432&quot;, user = &quot;postgres&quot;, password = &quot;&quot;) dbWriteTable(con, &quot;flu_tidy&quot;, flu_tidy) dbWriteTable(con, &quot;dengue_tidy&quot;, dengue_tidy) dbWriteTable(con, &quot;gapminder&quot;, gapminder) dbDisconnect(con) Then I inspected the contents of the datasets in DBeaver, with the following code: select dengue_cases, country from dengue_tidy order by dengue_cases asc select dengue_cases, country from dengue_tidy order by dengue_cases desc select flu_cases, country from flu_tidy order by flu_cases asc select flu_cases, country from flu_tidy order by flu_cases desc select infant_mortality, country from gapminder order by infant_mortality desc select infant_mortality, country from gapminder order by infant_mortality asc select life_expectancy, country from gapminder order by life_expectancy desc select life_expectancy, country from gapminder order by life_expectancy asc I also inspected the data in R, with the code below: ## Inspecting the flu_tidy dataset flu_tidy %&gt;% arrange(desc(flu_cases)) %&gt;% head() ## # A tibble: 6 × 3 ## # Groups: country_f [3] ## country_f year_f flu_cases ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 South Africa 2014 155577 ## 2 South Africa 2009 150344 ## 3 Canada 2009 141118 ## 4 South Africa 2013 140671 ## 5 United States 2009 139394 ## 6 South Africa 2012 136519 flu_tidy$flu_cases %&gt;% min(flu_tidy$flu_cases, na.rm = TRUE) ## [1] 106 flu_tidy$flu_cases %&gt;% max(flu_tidy$flu_cases, na.rm = TRUE) ## [1] 155577 flu_tidy$country_f %&gt;% unique() ## [1] &quot;Argentina&quot; &quot;Australia&quot; &quot;Austria&quot; &quot;Belgium&quot; ## [5] &quot;Bolivia&quot; &quot;Brazil&quot; &quot;Bulgaria&quot; &quot;Canada&quot; ## [9] &quot;Chile&quot; &quot;France&quot; &quot;Germany&quot; &quot;Hungary&quot; ## [13] &quot;Japan&quot; &quot;Mexico&quot; &quot;Netherlands&quot; &quot;New Zealand&quot; ## [17] &quot;Norway&quot; &quot;Paraguay&quot; &quot;Peru&quot; &quot;Poland&quot; ## [21] &quot;Romania&quot; &quot;Russia&quot; &quot;South Africa&quot; &quot;Spain&quot; ## [25] &quot;Sweden&quot; &quot;Switzerland&quot; &quot;Ukraine&quot; &quot;United States&quot; ## [29] &quot;Uruguay&quot; ## Inspecting the dengue_tidy dataset dengue_tidy %&gt;% arrange(desc(dengue_cases)) %&gt;% head() ## # A tibble: 6 × 3 ## # Groups: country_d [3] ## country_d year_d dengue_cases ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Venezuela 2010 27.8 ## 2 Venezuela 2014 22.8 ## 3 Thailand 2013 17.3 ## 4 Argentina 2009 16.7 ## 5 Venezuela 2009 15.8 ## 6 Venezuela 2013 15.7 dengue_tidy$dengue_cases %&gt;% min(dengue_tidy$dengue_cases, na.rm = TRUE) ## [1] 0.059 dengue_tidy$dengue_cases %&gt;% max(dengue_tidy$dengue_cases, na.rm = TRUE) ## [1] 27.847 dengue_tidy$country_d %&gt;% unique() ## [1] &quot;Argentina&quot; &quot;Bolivia&quot; &quot;Brazil&quot; &quot;India&quot; &quot;Indonesia&quot; ## [6] &quot;Mexico&quot; &quot;Philippines&quot; &quot;Singapore&quot; &quot;Thailand&quot; &quot;Venezuela&quot; ## Inspecting the gapminder dataset gapminder$infant_mortality %&gt;% min(gapminder$infant_mortality, na.rm = TRUE) ## [1] 1.5 gapminder$infant_mortality %&gt;% max(gapminder$infant_mortality, na.rm = TRUE) ## [1] 276.9 gapminder$life_expectancy %&gt;% min(gapminder$life_expectancy, na.rm = TRUE) ## [1] 13.2 gapminder$life_expectancy %&gt;% max(gapminder$life_expectancy, na.rm = TRUE) ## [1] 83.9 gapminder %&gt;% select(country_g, year_g, life_expectancy) %&gt;% arrange(desc(life_expectancy)) %&gt;% head ## country_g year_g life_expectancy ## 1 Hong Kong, China 2016 83.90 ## 2 Hong Kong, China 2015 83.73 ## 3 Hong Kong, China 2014 83.56 ## 4 Hong Kong, China 2013 83.38 ## 5 Iceland 2014 83.30 ## 6 Iceland 2015 83.30 gapminder %&gt;% select( country_g, year_g, infant_mortality) %&gt;% arrange(desc(infant_mortality)) %&gt;% head() ## country_g year_g infant_mortality ## 1 Yemen 1963 276.9 ## 2 Yemen 1964 270.7 ## 3 Yemen 1961 269.2 ## 4 Yemen 1962 263.7 ## 5 Yemen 1965 263.6 ## 6 Yemen 1966 256.0 gapminder$country_g %&gt;% unique() %&gt;% head() ## [1] Albania Algeria Angola ## [4] Antigua and Barbuda Argentina Armenia ## 185 Levels: Albania Algeria Angola Antigua and Barbuda Argentina ... Zimbabwe In DBeaver, I performed some joins and exported a joined table to R. The joined table is called “Joined_table.csv”. The SQL code that I used to create the joined table is as follows: select * from flu_tidy left join dengue_tidy on year_f = year_d and country_f = country_d left join gapminder on year_f = year_g and country_f = country_g After reading in the data from “Joined_table.csv”, I removed the rows “year_d”, “year_g”, “country_d” and “country_g”. These rows were redundant, seeing as we already have the rows “year_f” and “country_f” from the flu dataset. I also changed the name of “country_f” to “country” and “year_f” to “year”. joined_table &lt;- read.csv(here(&quot;Data/Joined_table.csv&quot;)) joined_table &lt;- joined_table %&gt;% select(country_f:region, -(country_d:year_d)) joined_table &lt;- joined_table %&gt;% select(country_f:region, -(country_g:year_g)) joined_table &lt;- joined_table %&gt;% rename(country = &quot;country_f&quot;, year = &quot;year_f&quot;) Then I performed some descriptive statistics with this data set and made some visualizations. joined_table %&gt;% summary() ## country year flu_cases dengue_cases ## Length:406 Min. :2002 Min. : 106 Min. : 0.073 ## Class :character 1st Qu.:2005 1st Qu.: 3302 1st Qu.: 1.508 ## Mode :character Median :2008 Median : 9214 Median : 4.303 ## Mean :2008 Mean : 23372 Mean : 5.001 ## 3rd Qu.:2012 3rd Qu.: 32278 3rd Qu.: 7.872 ## Max. :2015 Max. :155577 Max. :16.739 ## NA&#39;s :72 NA&#39;s :354 ## infant_mortality life_expectancy fertility population ## Min. : 2.000 Min. :52.50 Min. :1.150 Min. : 3324096 ## 1st Qu.: 3.825 1st Qu.:74.10 1st Qu.:1.430 1st Qu.: 8949130 ## Median : 6.150 Median :78.30 Median :1.810 Median : 21811339 ## Mean :10.558 Mean :76.61 Mean :1.876 Mean : 50741686 ## 3rd Qu.:13.600 3rd Qu.:80.70 3rd Qu.:2.090 3rd Qu.: 52687274 ## Max. :54.700 Max. :83.20 Max. :3.980 Max. :321773631 ## ## gdp continent region ## Min. :7.214e+09 Length:406 Length:406 ## 1st Qu.:5.970e+10 Class :character Class :character ## Median :2.539e+11 Mode :character Mode :character ## Mean :9.119e+11 ## 3rd Qu.:6.578e+11 ## Max. :1.174e+13 ## NA&#39;s :117 For the graphs from joined_table, I only selected the countries that were relevant. So, for the dengue graph, I only selected the countries Argentina, Bolivia, Brazil, India, Indonesia, Mexico, Philippines, Singapore, Thailand and Venezuela because those were the only countries present in the original dengue data set, as we saw earlier. joined_table %&gt;% group_by(country) %&gt;% filter(country == &quot;Argentina&quot; | country == &quot;Bolivia&quot; | country == &quot;Brazil&quot; | country == &quot;India&quot; | country == &quot;Indonesia&quot; | country == &quot;Mexico&quot; | country == &quot;Philippines&quot; | country == &quot;Singapore&quot; | country == &quot;Thailand&quot; | country == &quot;Venezuela&quot;) %&gt;% ggplot(aes(x = year, y = dengue_cases, colour = country)) + geom_point() + geom_line() + theme_classic() + scale_x_continuous(breaks = seq(2002, 2015, 1))+ labs(title = &quot;Dengue cases in the years 2002 - 2015&quot;, x = &quot;Year&quot;, y = &quot;Dengue cases&quot;) In the dengue graph, only the countries Argentina, Bolivia, Brazil and Mexico are present, eventhough I selected more countries. Maybe the other countries aren’t present in our joined_table anymore. Let’s take a look at the countries in joined_table. joined_table$country %&gt;% unique() ## [1] &quot;Argentina&quot; &quot;Australia&quot; &quot;Austria&quot; &quot;Belgium&quot; ## [5] &quot;Bolivia&quot; &quot;Brazil&quot; &quot;Bulgaria&quot; &quot;Canada&quot; ## [9] &quot;Chile&quot; &quot;France&quot; &quot;Germany&quot; &quot;Hungary&quot; ## [13] &quot;Japan&quot; &quot;Mexico&quot; &quot;Netherlands&quot; &quot;New Zealand&quot; ## [17] &quot;Norway&quot; &quot;Paraguay&quot; &quot;Peru&quot; &quot;Poland&quot; ## [21] &quot;Romania&quot; &quot;Russia&quot; &quot;South Africa&quot; &quot;Spain&quot; ## [25] &quot;Sweden&quot; &quot;Switzerland&quot; &quot;Ukraine&quot; &quot;United States&quot; ## [29] &quot;Uruguay&quot; As expected, India, Indonesia, Philippines, Singapore, Thailand and Venezuela aren’t present in joined_table. Let’s see if these countries also have data about flu incidence. joined_table %&gt;% group_by(country) %&gt;% filter(country == &quot;Argentina&quot; | country == &quot;Bolivia&quot; | country == &quot;Brazil&quot;| country == &quot;Mexico&quot;) %&gt;% ggplot(aes(x = year, y = flu_cases, colour = country)) + geom_point() + geom_line() + theme_classic() + scale_x_continuous(breaks = seq(2002, 2015, 1))+ labs(title = &quot;Flu cases in the years 2002 - 2015&quot;, x = &quot;Year&quot;, y = &quot;Flu cases&quot;) Lastly, let’s see if these countries also have data about infant mortality, life expectancy, fertility and population. joined_table %&gt;% group_by(country) %&gt;% filter(country == &quot;Argentina&quot; | country == &quot;Bolivia&quot; | country == &quot;Brazil&quot;| country == &quot;Mexico&quot;) %&gt;% ggplot(aes(x = year, y = infant_mortality, colour = country)) + geom_point() + geom_line() + theme_classic() + scale_x_continuous(breaks = seq(2002, 2015, 1)) + labs(title = &quot;Infant mortality in the years 2002 - 2015&quot;, x = &quot;Year&quot;, y = &quot;Infant mortality&quot;) joined_table %&gt;% group_by(country) %&gt;% filter(country == &quot;Argentina&quot; | country == &quot;Bolivia&quot; | country == &quot;Brazil&quot; | country == &quot;Mexico&quot;) %&gt;% ggplot(aes(x = year, y = life_expectancy, colour = country)) + geom_point() + geom_line() + theme_classic() + scale_x_continuous(breaks = seq(2002, 2015, 1)) + labs(title = &quot;Life expectancy in the years 2002 - 2015&quot;, x = &quot;Year&quot;, y = &quot;Life expectancy&quot;) joined_table %&gt;% group_by(country) %&gt;% filter(country == &quot;Argentina&quot; | country == &quot;Bolivia&quot; | country == &quot;Brazil&quot; | country == &quot;Mexico&quot;) %&gt;% ggplot(aes(x = year, y = fertility, colour = country)) + geom_point() + geom_line() + theme_classic() + scale_x_continuous(breaks = seq(2002, 2015, 1)) + labs(title = &quot;Fertility in the years 2002 - 2015&quot;, x = &quot;Year&quot;, y = &quot;Fertility&quot;) joined_table %&gt;% group_by(country) %&gt;% filter(country == &quot;Argentina&quot; | country == &quot;Bolivia&quot; | country == &quot;Brazil&quot; | country == &quot;Mexico&quot;) %&gt;% ggplot(aes(x = year, y = population, colour = country)) + geom_point() + geom_line() + theme_classic() + scale_x_continuous(breaks = seq(2002, 2015, 1)) + labs(title = &quot;Population in the years 2002 - 2015&quot;, x = &quot;Year&quot;, y = &quot;Population&quot;) "]]
